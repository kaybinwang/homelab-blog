name: Build

on:
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: [v*.*.*]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - uses: pre-commit/action@v3.0.0

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # needed for signing the images with GitHub OIDC Token
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: ${{ github.event_name != 'pull_request' }}
      uses: sigstore/cosign-installer@v3.0.1
      with:
        cosign-release: v2.0.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        tags: |
          type=raw,value=latest
          type=pep440,pattern={{version}}
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
      run: cosign sign --yes "$TAGS"
